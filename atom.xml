<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zahem Blogs</title>
  
  <subtitle>别拦我，我要开车了！！！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-13T12:07:53.947Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zahem</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux下RAID的用法</title>
    <link href="http://yoursite.com/2020/05/13/RAID/"/>
    <id>http://yoursite.com/2020/05/13/RAID/</id>
    <published>2020-05-13T11:18:56.000Z</published>
    <updated>2020-05-13T12:07:53.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、RAID（独立冗余磁盘阵列）"><a href="#1、RAID（独立冗余磁盘阵列）" class="headerlink" title="1、RAID（独立冗余磁盘阵列）"></a>1、RAID（独立冗余磁盘阵列）</h2><p>关于RAID的定义和概念在这里就不说了，百度一下一大堆。</p><p>目前的RAID磁盘阵列有十几种方案，今天说的是最常用的四种方案RAID0、RAID1、RAID5、RAID10.</p><h3 id="1-1、RAID0"><a href="#1-1、RAID0" class="headerlink" title="1.1、RAID0"></a>1.1、RAID0</h3><p>RAID0是将硬盘组（最少两块），通过硬件或者软件的方式<strong>串联</strong>在一起组成一个<strong>卷组</strong>，在<strong>理想状态下</strong>能有效的提高硬盘的<strong>吞吐速度</strong>，但是不具备<strong>数据备份和数据恢复</strong>的功能。</p><img src="https://s1.ax1x.com/2020/05/13/YdbA0S.png" alt="YdbA0S.png" border="0" /><h3 id="1-2、RAID1"><a href="#1-2、RAID1" class="headerlink" title="1.2、RAID1"></a>1.2、RAID1</h3><p>RAID 1通过<a href="https://baike.baidu.com/item/磁盘/2842227" target="_blank" rel="noopener">磁盘</a>数据镜像实现<a href="https://baike.baidu.com/item/数据冗余/10168463" target="_blank" rel="noopener">数据冗余</a>，在成对的独立磁盘上产生互 为备份的数据。当原始数据繁忙时，可直接从镜像拷贝中读取数据，因此RAID 1可以提高读取性能。RAID 1是<a href="https://baike.baidu.com/item/磁盘阵列/1149823" target="_blank" rel="noopener">磁盘阵列</a>中单位成本最高的，但提供了很高的数据安全性和可用性。当一个磁盘失效时，系统可以自动切换到镜像磁盘上读写，而不需要重组失效的数据。</p><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><p>RAID1通过硬盘数据镜像实现数据的冗余，保护数据安全，在两块盘上产生互为备份的数据，当原始数据繁忙时，可直接从镜像备份中读取数据，因此RAID1可以提供读取性能。</p><p>RAID1是硬盘中单位成本最高的，但提供了很高的数据安全性和可用性，当一个硬盘失效时，系统可以自动切换到镜像硬盘上读/写，并且不需要重组失效的数据。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/13/YdqpEF.png" alt="YdqpEF.png" title="">                </div>                <div class="image-caption">YdqpEF.png</div>            </figure><h3 id="1-3、RAID5"><a href="#1-3、RAID5" class="headerlink" title="1.3、RAID5"></a>1.3、RAID5</h3><p>RAID 5 是一种存储性能、<a href="https://baike.baidu.com/item/数据安全/3204964" target="_blank" rel="noopener">数据安全</a>和存储成本兼顾的存储解决方案。 RAID 5可以理解为是RAID 0和RAID 1的折中方案。RAID 5可以为系统提供<a href="https://baike.baidu.com/item/数据安全/3204964" target="_blank" rel="noopener">数据安全</a>保障，但保障程度要比Mirror低而磁盘空间利用率要比Mirror高。RAID 5具有和RAID 0相近似的数据读取速度，只是多了一个<a href="https://baike.baidu.com/item/奇偶校验/8090811" target="_blank" rel="noopener">奇偶校验</a>信息，写入数据的速度比对单个<a href="https://baike.baidu.com/item/磁盘/2842227" target="_blank" rel="noopener">磁盘</a>进行写入操作稍慢。同时由于多个数据对应一个<a href="https://baike.baidu.com/item/奇偶校验/8090811" target="_blank" rel="noopener">奇偶校验</a>信息，RAID 5的磁盘空间利用率要比[RAID 1](<a href="https://baike.baidu.com/item/RAID" target="_blank" rel="noopener">https://baike.baidu.com/item/RAID</a> 1)高，存储成本相对较低，是运用较多的一种解决方案</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/13/YdL9qf.png" alt="YdL9qf.png" title="">                </div>                <div class="image-caption">YdL9qf.png</div>            </figure><h3 id="1-4、RAID10"><a href="#1-4、RAID10" class="headerlink" title="1.4、RAID10"></a>1.4、RAID10</h3><p>RAID10就是RAID1+RAID0组合，至少需要四块硬盘。先制成RAID1磁盘阵列，然后在实行RAID0技术。从理论上来讲，最多可以损坏50%的硬盘而不丢失数据，在不考虑成本的条件下，RAID10的性能超过了RAID5</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/13/YdLqO0.png" alt="YdLqO0.png" title="">                </div>                <div class="image-caption">YdLqO0.png</div>            </figure><h2 id="2、部署磁盘阵列"><a href="#2、部署磁盘阵列" class="headerlink" title="2、部署磁盘阵列"></a>2、部署磁盘阵列</h2><blockquote><p>mdadm命令用于管理Linux系统中的软件RAID硬盘阵列，格式为“mdadm [模式]&lt;RAID设备名称&gt; [选项] [成员设备名称]”</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>检测设备名称</td></tr><tr><td>-n</td><td>指定设备数量</td></tr><tr><td>-l</td><td>制定RAID级别</td></tr><tr><td>-C</td><td>创建</td></tr><tr><td>-v</td><td>显示过程</td></tr><tr><td>-f</td><td>模拟设备损坏</td></tr><tr><td>-r</td><td>移除设备</td></tr><tr><td>-Q</td><td>查看摘要信息</td></tr><tr><td>-D</td><td>查看详细信息</td></tr><tr><td>-S</td><td>停止RAID磁盘阵列</td></tr></tbody></table><h3 id="2-1、命令"><a href="#2-1、命令" class="headerlink" title="2.1、命令"></a>2.1、命令</h3><blockquote><p>创建RAID10</p><p> /dev/md0    为设备名称，</p><p> -n 4    4块硬盘</p><p>-l 10    指定RAID10级别</p></blockquote><ul><li>mdadm -Cv /dev/md0 -a yes -n 4 -l 10 /dev/sdb /dev/sdc /dev/sdd /dev/sde</li></ul><blockquote><p>制作好的RAID磁盘格式化为ext4格式</p></blockquote><ul><li>mkfs.ext4 /dev/md0</li></ul><blockquote><p>创建挂载点，进行挂在操纵，完成后可看见空间</p></blockquote><ul><li><p>mkdir /RAID</p></li><li><p>mount /dev/md0 /RAID</p></li><li><p>df -h</p></li></ul><blockquote><p>查看/dev/md0详细信息</p></blockquote><ul><li>mdadm -D /dev/md0</li></ul><blockquote><p>写入配置文件永久生效</p></blockquote><ul><li>echo “/dev/md0 /RAID ext4 defaults 0 0” &gt;&gt; /etc/fstab</li></ul><h3 id="2-2、损坏模拟"><a href="#2-2、损坏模拟" class="headerlink" title="2.2、损坏模拟"></a>2.2、损坏模拟</h3><blockquote><p>移除 /dev/sdb</p></blockquote><ul><li>mdadm /dev/md0 -f /dev/sdb</li></ul><blockquote><p>重启后重新添加到磁盘阵列</p></blockquote><ul><li>umount /RAID</li></ul><blockquote><p>把新硬盘加入阵列</p></blockquote><ul><li>mdadm /dev/md0 -a /dev/sdb</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上是RAID10的创建和损坏替换的过程，有极端情况下会出现全部硬盘损坏，此时就没有任何办法了。</p><p>建议在有一个备份盘，当出事后直接怼上，防止这种极端情况出现，使用的命令如下：</p><blockquote><p>mdadm -Cv /dev/md0 -a yes -n 4 -l 10 -x 1 /dev/sdb /dev/sdc /dev/sdd /dev/sde</p><p>上面命令中的</p><p>-x 1    创建一个备份硬盘</p><p>当其中一个硬盘损坏时，备份硬盘会自动怼上去，在买到新硬盘进行替换，步骤不变，可以试试看哦！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、RAID（独立冗余磁盘阵列）&quot;&gt;&lt;a href=&quot;#1、RAID（独立冗余磁盘阵列）&quot; class=&quot;headerlink&quot; title=&quot;1、RAID（独立冗余磁盘阵列）&quot;&gt;&lt;/a&gt;1、RAID（独立冗余磁盘阵列）&lt;/h2&gt;&lt;p&gt;关于RAID的定义和概念在这
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://yoursite.com/tags/java/linux/"/>
    
      <category term="RAID" scheme="http://yoursite.com/tags/java/RAID/"/>
    
  </entry>
  
  <entry>
    <title>一个Java的响应类</title>
    <link href="http://yoursite.com/2020/05/13/name/"/>
    <id>http://yoursite.com/2020/05/13/name/</id>
    <published>2020-05-13T09:04:59.000Z</published>
    <updated>2020-05-13T09:27:21.922Z</updated>
    
    <content type="html"><![CDATA[<p>用java写了一个通用的响应类，还有一个封装redis类，里面有常用的方法，方便以后自己来用。</p><h2 id="1、ServerResponse类泛型，实现序列化接口"><a href="#1、ServerResponse类泛型，实现序列化接口" class="headerlink" title="1、ServerResponse类泛型，实现序列化接口"></a>1、ServerResponse类泛型，实现序列化接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 保证序列化json的时候,如果是null的对象,key也会消失</span></span><br><span class="line"><span class="comment">* <span class="doctag">@JsonSerialize</span>(include =  JsonSerialize.Inclusion.NON_NULL)</span></span><br><span class="line"><span class="comment">* 上面的方法过时</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerResponse</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ServerResponse</span><span class="params">(<span class="keyword">int</span> code)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ServerResponse</span><span class="params">(<span class="keyword">int</span> code, String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=code;</span><br><span class="line">        <span class="keyword">this</span>.msg=msg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ServerResponse</span><span class="params">(<span class="keyword">int</span> code, T data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=code;</span><br><span class="line">        <span class="keyword">this</span>.data=data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ServerResponse</span><span class="params">(<span class="keyword">int</span> code, String msg, T data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=code;</span><br><span class="line">        <span class="keyword">this</span>.msg=msg;</span><br><span class="line">        <span class="keyword">this</span>.data=data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ServerResponse&lt;T&gt; <span class="title">success</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServerResponse&lt;T&gt;(ResponseCode.SUCCESS.getCode());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ServerResponse&lt;T&gt; <span class="title">successByMsg</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServerResponse&lt;T&gt;(ResponseCode.SUCCESS.getCode(),msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ServerResponse&lt;T&gt; <span class="title">success</span><span class="params">(T data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServerResponse&lt;T&gt;(ResponseCode.SUCCESS.getCode(),data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ServerResponse&lt;T&gt; <span class="title">error</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServerResponse&lt;T&gt;(ResponseCode.ERROR.getCode());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ServerResponse&lt;T&gt; <span class="title">errorByMsg</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServerResponse&lt;T&gt;(ResponseCode.ERROR.getCode(),msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">ServerResponse&lt;T&gt; <span class="title">error</span><span class="params">(T data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServerResponse&lt;T&gt;(ResponseCode.ERROR.getCode(),data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、枚举类ResponseCode，存储错误类型"><a href="#2、枚举类ResponseCode，存储错误类型" class="headerlink" title="2、枚举类ResponseCode，存储错误类型"></a>2、枚举类ResponseCode，存储错误类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 使用时自行扩展</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span>  ResponseCode &#123;</span><br><span class="line">    SUCCESS(<span class="number">200</span>,<span class="string">"SUCCESS"</span>),</span><br><span class="line">    ERROR(<span class="number">400</span>,<span class="string">"ERROR"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String msg;</span><br><span class="line"></span><br><span class="line">    ResponseCode(<span class="keyword">int</span> code,String msg)&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=code;</span><br><span class="line">        <span class="keyword">this</span>.msg=msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> code;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> msg;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、RedisClient类，封装一些常用的redis操作"><a href="#3、RedisClient类，封装一些常用的redis操作" class="headerlink" title="3、RedisClient类，封装一些常用的redis操作"></a>3、RedisClient类，封装一些常用的redis操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisClient</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(T k,T v)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(k, v);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置Hash</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> h</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hk</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hv</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(T h,T hk,T hv)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            redisTemplate.opsForHash().put(h,hk,hv);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取value值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(T key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().get(key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取Hash值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(T h,T o)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().get(h,o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//是否存在key</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">hasKey</span><span class="params">(T key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//自增1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">incr</span><span class="params">(T k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置过期时间</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">setExpire</span><span class="params">(T k, <span class="keyword">int</span> time, TimeUnit timeUnit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.expire(k,time,timeUnit);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取过期时间</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">ttl</span><span class="params">(T k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().getOperations().getExpire(k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用java写了一个通用的响应类，还有一个封装redis类，里面有常用的方法，方便以后自己来用。&lt;/p&gt;
&lt;h2 id=&quot;1、ServerResponse类泛型，实现序列化接口&quot;&gt;&lt;a href=&quot;#1、ServerResponse类泛型，实现序列化接口&quot; class=&quot;he
      
    
    </summary>
    
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/java/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo 使用模版</title>
    <link href="http://yoursite.com/2020/05/12/dubbo/"/>
    <id>http://yoursite.com/2020/05/12/dubbo/</id>
    <published>2020-05-12T12:26:14.716Z</published>
    <updated>2020-05-12T12:28:41.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、实体类"><a href="#一、实体类" class="headerlink" title="一、实体类"></a>一、实体类</h2><p>1、创建<strong>dubbo-api</strong>子项目，创建<strong>UserService接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">sayHi</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、提供者"><a href="#二、提供者" class="headerlink" title="二、提供者"></a>二、提供者</h2><blockquote><p>先启动提供者才能启动消费者！！！！</p></blockquote><p>1、创建<strong>dubbo-provider</strong>项目，创建<strong>UserServerImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zahem.dubboprovider.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zahem.dubboapi.UserService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>(version = <span class="string">"$&#123;user.service.version&#125;"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello DUBBO"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、pom.xml</p><blockquote><p>dubbo2.7.*，不在支持zkClient，可选替代为curator或zookeeper依赖，需导入api接口的依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--  curator为zookeeper的客户端--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        dubbo依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        api接口--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zahem<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9091</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-provider</span><span class="comment">#项目名称</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="number">1.0</span><span class="number">.0</span><span class="comment">#版本号</span></span><br><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">scan:</span></span><br><span class="line">    <span class="attr">base-packages:</span> <span class="string">com.zahem.dubboprovider.service</span><span class="comment">#需要扫描的包</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">dubbo-provider</span><span class="comment">#项目名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-provider</span><span class="comment">#项目名称</span></span><br><span class="line">    <span class="attr">qos-port:</span> <span class="number">22222</span><span class="comment">#运维端口，默认22222，不同提供者的运维端口要不同，可写可不写</span></span><br><span class="line">    <span class="attr">qos-enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">protocol:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">dubbo</span><span class="comment">#项目名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo</span><span class="comment">#项目名称</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span><span class="comment">#dubbo端口号</span></span><br><span class="line">    <span class="attr">status:</span> <span class="string">server</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">zookeeper</span><span class="comment">#注册中心</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span><span class="comment">#单机版地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#由于最新版的dubbo控制台前端是vue编写，尚未完成，无法显示具体的信息，以下可写可不写</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">dubbo:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-shutdown:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-configs:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-services:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-references:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-properties:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Dubbo Health</span></span><br><span class="line">  <span class="attr">health:</span></span><br><span class="line">    <span class="attr">dubbo:</span></span><br><span class="line">      <span class="attr">status:</span></span><br><span class="line">        <span class="comment">## StatusChecker Name defaults (default : "memory", "load" )</span></span><br><span class="line">        <span class="attr">defaults:</span> <span class="string">memory</span></span><br><span class="line">        <span class="comment">## StatusChecker Name extras (default : empty )</span></span><br><span class="line">        <span class="attr">extras:</span> <span class="string">load,threadpool</span></span><br></pre></td></tr></table></figure><p>4、DubboProviderApplication启动类配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zahem.dubboprovider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.container.Main;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboProviderApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DubboProviderApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">        <span class="comment">// 启动 Provider 容器，注意这里的 Main 是 com.alibaba.dubbo.container 包下的</span></span><br><span class="line">        Main.main(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、消费者"><a href="#三、消费者" class="headerlink" title="三、消费者"></a>三、消费者</h2><p>1、编写controller类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zahem.dubboconsumer.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zahem.dubboapi.UserService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Reference</span>(version = <span class="string">"$&#123;user.service.version&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"hi"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.sayHi();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、配置pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--curator依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        api接口--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zahem<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        dubbo--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、配置applicatim.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-consumer</span><span class="comment">#项目名称</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="attr">version:</span> <span class="number">1.0</span><span class="number">.0</span><span class="comment">#版本号</span></span><br><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">scan:</span></span><br><span class="line">    <span class="attr">base-packages:</span> <span class="string">com.zahem.dubboconsumer.controller</span><span class="comment">#扫描包</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">dubbo-consumer</span><span class="comment">#消费者名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo-consumer</span><span class="comment">#消费者名称</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">zookeeper</span><span class="comment">#注册中心</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span><span class="comment">#单机版注册中心</span></span><br><span class="line">    <span class="comment">#集群注册中心配置，根据条件选择其中</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://192.168.10.131:218？backup=192.168.10.131:2182,192.168.10.131:2183</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#可写可不写</span></span><br><span class="line"><span class="attr">endpoints:</span></span><br><span class="line">  <span class="attr">dubbo:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9091</span></span><br><span class="line">  <span class="comment"># Dubbo Health</span></span><br><span class="line">  <span class="attr">health:</span></span><br><span class="line">    <span class="attr">dubbo:</span></span><br><span class="line">      <span class="attr">status:</span></span><br><span class="line">        <span class="comment">## StatusChecker Name defaults (default : "memory", "load" )</span></span><br><span class="line">        <span class="attr">defaults:</span> <span class="string">memory</span></span><br><span class="line">  <span class="comment"># Enables Dubbo All Endpoints</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">dubbo:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-shutdown:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-configs:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-services:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-references:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dubbo-properties:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">"*"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、实体类&quot;&gt;&lt;a href=&quot;#一、实体类&quot; class=&quot;headerlink&quot; title=&quot;一、实体类&quot;&gt;&lt;/a&gt;一、实体类&lt;/h2&gt;&lt;p&gt;1、创建&lt;strong&gt;dubbo-api&lt;/strong&gt;子项目，创建&lt;strong&gt;UserService接口&lt;
      
    
    </summary>
    
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/java/"/>
    
      <category term="Dubbo" scheme="http://yoursite.com/tags/java/Dubbo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/05/12/hello-world/"/>
    <id>http://yoursite.com/2020/05/12/hello-world/</id>
    <published>2020-05-12T09:30:37.033Z</published>
    <updated>2020-05-12T12:23:10.762Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/java/"/>
    
  </entry>
  
</feed>
